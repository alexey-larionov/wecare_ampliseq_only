rm(identical_fields)
variants.df <- vars.df
genotypes.mx <- gt.mx
wecare_phenotypes.df <- phenotypes_2019.df
phenotypes.df <- phenotypes_2019.df
sum(is.na(phenotypes.df))
sum(phenotypes.df=="")
dim(phenotypes.df)
dim(variants.df)
dim(genotypes.mx)
rm(gt.mx, vars.df, phenotypes_2018.df, phenotypes_2019.df)
# Chunk 1: set_width
#eval=F
options(width = 999)
# https://stackoverflow.com/questions/36845178/width-of-r-code-chunk-output-in-rmarkdown-files-knitr-ed-to-html
# Chunk 2: start_section
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
library(ggplot2)
library(vcfR) # for reading VCF with samples names
library(tidyr) # for separate (samples names parsing)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s09_add_phenotypes"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
# Chunk 3: read_data
# Phenotype data
phenotypes_2018_file <- paste(base_folder, "phenotypes_txt/phenotypes_dec2018.txt", sep="/")
phenotypes_2018.df <- read.table(phenotypes_2018_file, header=T, sep="\t", quote="")
phenotypes_2019_file <- paste(base_folder, "phenotypes_txt/phenotypes_jan2019.txt", sep="/")
phenotypes_2019.df <- read.table(phenotypes_2019_file, header=T, sep="\t", quote="")
# Sequencing data
data_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s08_reshape_variants_annotations"
load(paste(data_folder, "s03_update_variants_annotations.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s09_add_phenotypes"
# Clean-up
rm(phenotypes_2018_file, phenotypes_2019_file, data_folder)
# Chunk 4: compare_phenotypes
dim(phenotypes_2018.df)
dim(phenotypes_2019.df)
sum(is.na(phenotypes_2018.df))
sum(is.na(phenotypes_2019.df))
colnames(phenotypes_2018.df)
colnames(phenotypes_2019.df)
identical_fields <- colnames(phenotypes_2018.df)
sum(phenotypes_2018.df[,identical_fields] != phenotypes_2019.df[,identical_fields])
rm(identical_fields)
# Chunk 5: update_variants
variants.df <- vars.df
genotypes.mx <- gt.mx
phenotypes.df <- phenotypes_2019.df
sum(is.na(phenotypes.df))
sum(phenotypes.df=="")
dim(phenotypes.df)
dim(variants.df)
dim(genotypes.mx)
rm(gt.mx, vars.df, phenotypes_2018.df, phenotypes_2019.df)
# Get list of long IDs for all 541 samples
vcf_file="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s04_annotated_vcf/ampliseq_nfe.vcf"
vcfr <- read.vcfR(vcf_file)
gt_739.mx <- extract.gt(vcfr)
dim(gt_739.mx)
gt_739.mx[1:5,1:5]
gt_739.mx[1:5,541:542]
gt_739.mx[1:5,735:739]
wecare_samples.df <- data.frame(long_ids=colnames(gt_739.mx)[1:541])
nfe_samples.df <- data.frame(long_ids=colnames(gt_739.mx)[542:739])
# Split the long IDs for wecare samples
wecare_samples.df <- separate(wecare_samples.df, "long_ids", c("num", "illumina_id", "illumina_lane"),
sep="_", remove=F)
wecare_samples.df$num <- as.integer(wecare_samples.df$num)
dim(wecare_samples.df)
str(wecare_samples.df)
wecare_samples.df[1:5,]
# Sort wecare_samples.df by sample num (to sync with phenotypes.df)
wecare_samples.df <- wecare_samples.df[order(wecare_samples.df$num),]
wecare_samples.df[1:5,]
wecare_phenotypes.df[1:5,1:5]
phenotypes.df[1:5,1:5]
# Bind add long IDs to phenotypes table
phenotypes.df <- cbind(wecare_samples.df, phenotypes.df)
# Check that numbers are identical
sum(phenotypes.df$num == phenotypes.df$Sample_num)
sum(phenotypes.df$num != phenotypes.df$Sample_num)
View(phenotypes.df)
# Remove one of the numbers
phenotypes.df <- phenotypes.df[,-2]
# Remove one of the numbers
phenotypes.df <- phenotypes.df[,-2]
dim(phenotypes.df)
colnames(phenotypes.df)
str(phenotypes.df)
# Set rownames
rownames(phenotypes.df) <- phenotypes.df$long_ids
# Check results
genotypes.mx[1:5,1:5]
variants.df[1:5,1:5]
phenotypes.df[1:5,1:5]
# Clean-up
rm(vcf_file, vcfr, gt_739.mx, wecare_samples.df, nfe_samples.df,
wecare_phenotypes.df, nfe_phenotypes.df)
dim(genotypes.mx)
dim(variants.df)
dim(phenotypes.df)
# Chunk 1: set_width
#eval=F
options(width = 999)
# https://stackoverflow.com/questions/36845178/width-of-r-code-chunk-output-in-rmarkdown-files-knitr-ed-to-html
# Chunk 2: start_section
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
library(ggplot2)
library(vcfR) # for reading VCF with samples names
library(tidyr) # for separate (samples names parsing)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s09_add_phenotypes"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
# Chunk 3: read_data
# Phenotype data
phenotypes_2018_file <- paste(base_folder, "phenotypes_txt/phenotypes_dec2018.txt", sep="/")
phenotypes_2018.df <- read.table(phenotypes_2018_file, header=T, sep="\t", quote="")
phenotypes_2019_file <- paste(base_folder, "phenotypes_txt/phenotypes_jan2019.txt", sep="/")
phenotypes_2019.df <- read.table(phenotypes_2019_file, header=T, sep="\t", quote="")
# Sequencing data
data_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s08_reshape_variants_annotations"
load(paste(data_folder, "s03_update_variants_annotations.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s09_add_phenotypes"
# Clean-up
rm(phenotypes_2018_file, phenotypes_2019_file, data_folder)
# Chunk 4: compare_phenotypes
dim(phenotypes_2018.df)
dim(phenotypes_2019.df)
sum(is.na(phenotypes_2018.df))
sum(is.na(phenotypes_2019.df))
colnames(phenotypes_2018.df)
colnames(phenotypes_2019.df)
identical_fields <- colnames(phenotypes_2018.df)
sum(phenotypes_2018.df[,identical_fields] != phenotypes_2019.df[,identical_fields])
rm(identical_fields)
# Chunk 5: update_variants
variants.df <- vars.df
genotypes.mx <- gt.mx
phenotypes.df <- phenotypes_2019.df
sum(is.na(phenotypes.df))
sum(phenotypes.df=="")
dim(phenotypes.df)
dim(variants.df)
dim(genotypes.mx)
rm(gt.mx, vars.df, phenotypes_2018.df, phenotypes_2019.df)
# Chunk 6: phenotypes_rownames
# Get list of long IDs for all 541 samples
vcf_file="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s04_annotated_vcf/ampliseq_nfe.vcf"
vcfr <- read.vcfR(vcf_file)
gt_739.mx <- extract.gt(vcfr)
dim(gt_739.mx)
gt_739.mx[1:5,1:5]
gt_739.mx[1:5,541:542]
gt_739.mx[1:5,735:739]
wecare_samples.df <- data.frame(long_ids=colnames(gt_739.mx)[1:541])
nfe_samples.df <- data.frame(long_ids=colnames(gt_739.mx)[542:739])
# Split the long IDs for wecare samples
wecare_samples.df <- separate(wecare_samples.df, "long_ids", c("num", "illumina_id", "illumina_lane"),
sep="_", remove=F)
wecare_samples.df$num <- as.integer(wecare_samples.df$num)
dim(wecare_samples.df)
str(wecare_samples.df)
wecare_samples.df[1:5,]
# Sort wecare_samples.df by sample num (to sync with phenotypes.df)
wecare_samples.df <- wecare_samples.df[order(wecare_samples.df$num),]
wecare_samples.df[1:5,]
phenotypes.df[1:5,1:5]
# Bind add long IDs to phenotypes table
phenotypes.df <- cbind(wecare_samples.df, phenotypes.df)
# Check that numbers are identical
sum(phenotypes.df$num == phenotypes.df$Sample_num)
sum(phenotypes.df$num != phenotypes.df$Sample_num)
# Remove one of the numbers
phenotypes.df <- phenotypes.df[,-2]
dim(phenotypes.df)
colnames(phenotypes.df)
str(phenotypes.df)
# Set rownames
rownames(phenotypes.df) <- phenotypes.df$long_ids
# Check results
genotypes.mx[1:5,1:5]
variants.df[1:5,1:5]
phenotypes.df[1:5,1:5]
dim(genotypes.mx)
dim(variants.df)
dim(phenotypes.df)
# Clean-up
rm(vcf_file, vcfr, gt_739.mx, wecare_samples.df, nfe_samples.df)
dim(genotypes.mx)
dim(phenotypes.df)
phenotypes.df <- phenotypes.df[colnames(genotypes.mx),]
dim(phenotypes.df)
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
table(phenotypes.df$cc)
save.image(paste(base_folder, "s01_add_phenotypes.RData", sep="/"))
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
library(ggplot2)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s10_remove_duplicates"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
source_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s09_add_phenotypes"
load(paste(source_folder, "s01_add_phenotypes.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s10_remove_duplicates"
rm(source_folder)
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
# Remove common variants
common_vars <- variants.df$init_AF >= 0.05 & variants.df$init_AF <= 0.95
sum(common_vars)
gt_com.mx <- genotypes.mx[common_vars,]
dim(gt_com.mx)
# Initialise concordance matrix
conc.mx <- matrix(NA, ncol=ncol(gt_com.mx), nrow=ncol(gt_com.mx))
colnames(conc.mx) <- colnames(gt_com.mx)
rownames(conc.mx) <- colnames(gt_com.mx)
conc.mx[1:5,1:5]
# Initialise counts matrix
cnts.mx <- matrix(NA, ncol=ncol(gt_com.mx), nrow=ncol(gt_com.mx))
colnames(cnts.mx) <- colnames(gt_com.mx)
rownames(cnts.mx) <- colnames(gt_com.mx)
cnts.mx[1:5,1:5]
# Calculate concordances
for(sample_1 in colnames(gt_com.mx)){
for(sample_2 in colnames(gt_com.mx)){
# Get vectors of variants for both samples
smp1 <- gt_com.mx[,sample_1]
smp2 <- gt_com.mx[,sample_2]
# Calculate concordance
total <- sum(!is.na(smp1) & !is.na(smp2))
concordant <- sum(smp1==smp2, na.rm=T)
concordance_rate <- concordant / total
# Write result
if(sample_1 == sample_2){
NA  -> cnts.mx[sample_1,sample_2]
NA  -> conc.mx[sample_1,sample_2]
}else{
total -> cnts.mx[sample_1,sample_2]
concordance_rate -> conc.mx[sample_1,sample_2]
}
}
}
# Check results
cnts.mx[1:5,1:5]
conc.mx[1:5,1:5]
# Clean-up
rm(common_vars, gt_com.mx, sample_1, sample_2, smp1, smp2,
total, concordant, concordance_rate)
# No missed values (except self-concordance/count)
dim(cnts.mx)
sum(is.na(cnts.mx))
sum(is.na(conc.mx))
hist(cnts.mx)
quantile(cnts.mx, na.rm=T)
mean(cnts.mx, na.rm=T)
hist(conc.mx, ylim=c(0,200000), lab=T)
hist(conc.mx, ylim=c(0,150000), lab=T)
hist(conc.mx, ylim=c(0,140000), lab=T)
hist(conc.mx[conc.mx > 0.9], lab=T, ylim=c(0,30))
sum(conc.mx == 1, na.rm=T)
# Make list of most similar samples (concordance > 0.9)
conc_cases.mx <- matrix(nrow=0, ncol=4)
c("sample_1","sample_2","count","concordance") -> colnames(conc_cases.mx)
for(sample_1 in rownames(conc.mx)){
for(sample_2 in colnames(conc.mx)){
if(sample_1!=sample_2 & conc.mx[sample_1,sample_2] > 0.9 ){
conc_cases.mx <- rbind(conc_cases.mx, c(sample_1,sample_2,
cnts.mx[sample_1,sample_2],
conc.mx[sample_1,sample_2]))
}
}
}
# Check result
conc_cases.mx
# Heatmaps
heatmap(conc.mx, Rowv=NA, Colv=NA, scale='none',
col = cm.colors(256), labRow=NA, labCol = NA,
main="Cases concordance (common variants)")
heatmap(conc.mx, scale='none',
col = cm.colors(256), labRow=NA, labCol = NA,
main="Cases concordance (common variants, clustered)")
# Clean-up
rm(sample_1, sample_2)
dim(phenotypes.df)
colnames(phenotypes.df)
x <- phenotypes.df["40_S189_L007",] != phenotypes.df["41_S328_L008",]
sum(x[5:24]) # exclude long_ids illumina_id illumina_lane Sample_num fields
x <- phenotypes.df["76_S299_L008",] != phenotypes.df["77_S370_L008",]
sum(x[5:24]) # exclude long_ids illumina_id illumina_lane Sample_num fields
x <- phenotypes.df["234_S381_L008",] != phenotypes.df["235_S535_L008",]
sum(x[5:24]) # exclude long_ids illumina_id illumina_lane Sample_num fields
x <- phenotypes.df["244_S175_L007",] != phenotypes.df["245_S59_L007",]
sum(x[5:24]) # exclude long_ids illumina_id illumina_lane Sample_num fields
x <- phenotypes.df["280_S173_L007",] != phenotypes.df["281_S185_L007",]
sum(x[5:24]) # exclude long_ids illumina_id illumina_lane Sample_num fields
phenotypes.df[c("280_S173_L007","281_S185_L007"),x]
x <- phenotypes.df["347_S36_L007",] != phenotypes.df["348_S17_L007",]
sum(x[5:24]) # exclude long_ids illumina_id illumina_lane Sample_num fields
x <- phenotypes.df["398_S161_L007",] != phenotypes.df["399_S255_L007",]
sum(x[5:24]) # exclude long_ids illumina_id illumina_lane Sample_num fields
x <- phenotypes.df["436_S178_L007",] != phenotypes.df["437_S177_L007",]
sum(x[5:24]) # exclude long_ids illumina_id illumina_lane Sample_num fields
x <- phenotypes.df["517_S450_L008",] != phenotypes.df["518_S384_L008",]
sum(x[5:24]) # exclude long_ids illumina_id illumina_lane Sample_num fields
x <- phenotypes.df["527_S233_L007",] != phenotypes.df["528_S275_L008",]
sum(x[5:24]) # exclude long_ids illumina_id illumina_lane Sample_num fields
x <- phenotypes.df["539_S288_L008",] != phenotypes.df["540_S461_L008",]
sum(x[5:24]) # exclude long_ids illumina_id illumina_lane Sample_num fields
x <- phenotypes.df["270_S70_L007",] != phenotypes.df["351_S71_L007",]
sum(x[5:21]) # exclude long_ids illumina_id illumina_lane Sample_num fields
phenotypes.df[c("270_S70_L007","351_S71_L007"),x]
x <- phenotypes.df["386_S273_L008",] != phenotypes.df["391_S376_L008",]
sum(x[5:21]) # exclude long_ids illumina_id illumina_lane Sample_num fields
phenotypes.df[c("386_S273_L008","391_S376_L008"),x]
rm(x)
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s10_remove_duplicates"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
source_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s09_add_phenotypes"
load(paste(source_folder, "s01_add_phenotypes.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_onlye/s10_remove_duplicates"
rm(source_folder)
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
all_samples <- colnames(genotypes.mx)
excluded_samples <- c("40_S189_L007","76_S299_L008","234_S381_L008",
"244_S175_L007","348_S17_L007","398_S161_L007",
"436_S178_L007","518_S384_L008","527_S233_L007",
"539_S288_L008","270_S70_L007","351_S71_L007",
"386_S273_L008","391_S376_L008")
retained_samples <- ! all_samples %in% excluded_samples
length(all_samples)
length(excluded_samples)
sum(retained_samples)
rm(all_samples, retained_samples)
genotypes.mx <- genotypes.mx[,!colnames(genotypes.mx) %in% excluded_samples]
phenotypes.df <- phenotypes.df[!rownames(phenotypes.df) %in% excluded_samples,]
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
dim(genotypes.mx)
dim(phenotypes.df)
rm(excluded_samples)
# Function to detect uniform numeric vectors
uniform.udf <- function(x){min(x,na.rm=T) == max(x,na.rm=T)}
# Make the filter
uniform_vars <- apply(genotypes.mx,1,uniform.udf)
sum(uniform_vars)
# Apply filter
variants.df <- variants.df[!uniform_vars,]
genotypes.mx <- genotypes.mx[!uniform_vars,]
sum(rownames(genotypes.mx) != rownames(variants.df))
dim(genotypes.mx)
dim(variants.df)
table(phenotypes.df$cc)
# Clean-up (keep hwe and vars_bi.df)
rm(uniform.udf, uniform_vars)
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
save.image(paste(base_folder, "s02_remove_duplicates.RData", sep="/"))
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s11_remove_BRCA_PALB_carriers"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
source_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s10_remove_duplicates"
load(paste(source_folder, "s02_remove_duplicates.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s11_remove_BRCA_PALB_carriers"
rm(source_folder)
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
BRCA_PALB_carriers <- c("48_S416_L008","137_S323_L008","140_S394_L008",
"311_S137_L007", "317_S174_L007", "377_S279_L008")
selected_cases <- ! colnames(genotypes.mx) %in% BRCA_PALB_carriers
genotypes.mx <- genotypes.mx[,selected_cases]
phenotypes.df <- phenotypes.df[selected_cases,]
rm(selected_cases, BRCA_PALB_carriers)
# Function to detect uniform numeric vectors
uniform.udf <- function(x){
if(all(is.na(x))) return(TRUE) # Return T if all are NA
min(x,na.rm=T)==max(x,na.rm=T)} # Return T if min=max, otherwise return F
# Make the filter
uniform_vars <- apply(genotypes.mx,1,uniform.udf)
sum(uniform_vars)
3721-46
521-6
# Chunk 1: set_width
#eval=F
options(width = 999)
# https://stackoverflow.com/questions/36845178/width-of-r-code-chunk-output-in-rmarkdown-files-knitr-ed-to-html
# Chunk 2: start_section
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s11_remove_BRCA_PALB_carriers"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
# Chunk 3: read_data
source_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s10_remove_duplicates"
load(paste(source_folder, "s02_remove_duplicates.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v05_ampliseq_only/s11_remove_BRCA_PALB_carriers"
rm(source_folder)
# Chunk 4: start_check
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
# Chunk 5: carriers_list
BRCA_PALB_carriers <- c("48_S416_L008","137_S323_L008","140_S394_L008",
"311_S137_L007", "317_S174_L007", "377_S279_L008")
# Chunk 6: exclude_carriers
selected_cases <- ! colnames(genotypes.mx) %in% BRCA_PALB_carriers
genotypes.mx <- genotypes.mx[,selected_cases]
phenotypes.df <- phenotypes.df[selected_cases,]
rm(selected_cases, BRCA_PALB_carriers)
# Chunk 7: update_variants
# Function to detect uniform numeric vectors
uniform.udf <- function(x){
if(all(is.na(x))) return(TRUE) # Return T if all are NA
min(x,na.rm=T)==max(x,na.rm=T)} # Return T if min=max, otherwise return F
# Make the filter
uniform_vars <- apply(genotypes.mx,1,uniform.udf)
sum(uniform_vars)
# Apply filter
variants.df <- variants.df[!uniform_vars,]
genotypes.mx <- genotypes.mx[!uniform_vars,]
# Clean-up
rm(uniform.udf, uniform_vars)
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
table(phenotypes.df$cc)
save.image(paste(base_folder, "s01_exclude_BRCA1_BCRA2_PALB2_carriers.RData", sep="/"))
